#include <iostream>
#include <fstream>
#include <vector>
#include <string>

using namespace std;

void displayTasks(const vector<string>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks available." << endl;
    } else {
        for (size_t i = 0; i < tasks.size(); ++i) {
            cout << i + 1 << ". " << tasks[i] << endl;
        }
    }
}

void saveTasks(const vector<string>& tasks, const string& filename) {
    ofstream outFile(filename);
    for (const auto& task : tasks) {
        outFile << task << endl;
    }
    outFile.close();
}

void loadTasks(vector<string>& tasks, const string& filename) {
    ifstream inFile(filename);
    string task;
    while (getline(inFile, task)) {
        tasks.push_back(task);
    }
    inFile.close();
}

int main() {
    vector<string> tasks;
    string filename = "tasks.txt";
    loadTasks(tasks, filename);

    int choice;
    string task;
    do {
        cout << "\nTo-Do List Menu:" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View Tasks" << endl;
        cout << "3. Delete Task" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice (1-4): ";
        cin >> choice;
        cin.ignore(); // To ignore newline character left in buffer

        switch (choice) {
            case 1: // Add Task
                cout << "Enter the task: ";
                getline(cin, task);
                tasks.push_back(task);
                saveTasks(tasks, filename);
                cout << "Task added." << endl;
                break;

            case 2: // View Tasks
                cout << "Current tasks:" << endl;
                displayTasks(tasks);
                break;

            case 3: // Delete Task
                displayTasks(tasks);
                cout << "Enter the number of the task to delete: ";
                int index;
                cin >> index;
                cin.ignore(); // To ignore newline character left in buffer

                if (index < 1 || index > tasks.size()) {
                    cout << "Invalid task number." << endl;
                } else {
                    tasks.erase(tasks.begin() + index - 1);
                    saveTasks(tasks, filename);
                    cout << "Task deleted." << endl;
                }
                break;

            case 4: // Exit
                cout << "Exiting program." << endl;
                break;

            default:
                cout << "Invalid choice. Please choose between 1-4." << endl;
                break;
        }
    } while (choice != 4);

    return 0;
}
